<?php

namespace smCore\cache;
use smCore\cache\Cache;

/**
 * Test class for Cache.
 * Generated by PHPUnit on 2012-05-20 at 03:03:12.
 */
class CacheTest extends \PHPUnit_Framework_TestCase {

	/**
	 * @var Cache
	 */
	protected $object;

	/**
	 * Sets up the fixture.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		// $this->object = new Cache;
		if (!defined('SMCORE'))
			define ('SMCORE', 1);
	}

	/**
	 * Tears down the fixture.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {

	}

	/**
	 * testInstance().
	 */
	public function testInstance() {
		$test = Cache::instance();
		$this->assertEquals(get_class($test), 'smCore\cache\FileCache');
	}

	/**
	 * testGet().
	 */
	public function testGet() {
		$key = 'test';
		$data = 'blah blah test';
		Cache::instance()->set($key, $data, 0);
		// should expire meanwhile
		sleep(1);

		$getit = Cache::instance()->get($key);
		$this->assertNotEquals($data, $getit);
		$this->assertEquals($getit, '');
	}

	/**
	 * testInvalidate().
	 */
	public function testInvalidate() {
		$key = 'test';
		$data = 'blah blah test';
		Cache::instance()->set($key, $data, 120);
		// invalidate all cache
		Cache::instance()->invalidate();
		$getit = Cache::instance()->get($key);

		$this->assertNotEquals($data, $getit);
		$this->assertEquals($getit, '');
	}

	/**
	 * testInvalidateKey().
	 */
	public function testInvalidateKey() {
		$key = 'test';
		$data = 'blah blah test';
		Cache::instance()->set($key, $data, 120);
		// invalidate key
		Cache::instance()->invalidate($key);
		$getit = Cache::instance()->get($key);

		$this->assertNotEquals($data, $getit);
		$this->assertEquals($getit, '');
	}

	/**
	 * testSet().
	 */
	public function testSet() {
		$key = 'test';
		$data = 'blah blah test';
		$t = time();

		Cache::instance()->set($key, $data, 3);
		$getit = Cache::instance()->get($key);
		$this->assertEquals($getit, $data);

	}

}

<?php

namespace smCore\cache;
use smCore\cache\Cache;

/**
 * Test class for Cache.
 * Generated by PHPUnit on 2012-05-20 at 03:03:12.
 */
class CacheTest extends \PHPUnit_Framework_TestCase {

	/**
	 * @var Cache
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		// $this->object = new Cache;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {

	}

	/**
	 * @todo Implement testInstance().
	 */
	public function testInstance() {
		$test = Cache::instance();
		$this->assertEquals(get_class($test), 'smCore\cache\FileCache');
	}

	/**
	 * @todo Implement testGet().
	 */
	public function testGet() {
		$key = 'test';
		$data = 'blah blah testy';
		// should expire meanwhile
		sleep(3);
		$getit = Cache::get($key);
		$this->assertNotEquals($data, $getit);
		$this->assertEquals($data, '');
	}

	/**
	 * @todo Implement testInvalidate().
	 */
	public function testInvalidate() {
		$key = 'test';
		$data = 'blah blah testy';
		// invalidate
		Cache::invalidate($key);
		$getit = Cache::get($key);

		$this->assertNotEquals($data, $getit);
		$this->assertEquals($data, '');
	}

	/**
	 * @todo Implement testInvalidateKey().
	 */
	public function testInvalidateKey() {
		$key = 'test';
		$data = 'blah blah testy';
		// invalidate
		Cache::invalidate($key);
		$getit = Cache::get($key);

		$this->assertNotEquals($data, $getit);
		$this->assertEquals($data, '');
	}

	/**
	 * @todo Implement testPut().
	 */
	public function testPut() {
		define ('SMCORE', 1);

		$key = 'test';
		$data = 'blah blah testy';
		$t = time();

		Cache::put($key, $data, 3);
		$getit = Cache::get($key);
		$this->assertEquals($getit, $data);

	}

}
